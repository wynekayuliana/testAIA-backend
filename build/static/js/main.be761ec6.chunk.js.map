{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["sliceData","data","current","limit","start","end","slice","App","props","onClickImage","link","window","open","onChangePagination","event","page","document","querySelector","scrollIntoView","behavior","block","setState","data_images","current_page","state","data_images_original","limit_per_page","onSubmitSearch","e","preventDefault","request_body","format","tags","formData","FormData","entries","entry","getFormData","target","search_value","replace","postImageSearchData","data_images_total","data_title","req","axios","post","Path","then","response","resp","items","length","title","catch","error","console","log","this","totalCount","className","style","margin","onSubmit","TextField","id","name","label","variant","InputProps","endAdornment","InputAdornment","position","IconButton","aria-label","type","Divider","Container","maxWidth","Grid","container","spacing","map","row","index","_title","substring","_author","author","match","Grow","in","timeout","item","xs","sm","md","Card","onClick","bind","CardActionArea","CardMedia","image","media","m","CardContent","fontSize","color","moment","date_taken","Pagination","count","Math","ceil","onChange","href","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.be761ec6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './App.css';\r\nimport {\r\n  TextField, Divider, InputAdornment, IconButton, Container, Grid,\r\n  Card, CardActionArea, CardContent, CardMedia, Grow\r\n} from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport ImageSearchIcon from '@material-ui/icons/ImageSearch';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport axios from 'axios';\r\nimport moment from \"moment\";\r\n\r\nimport * as Path from './utils/GlobalVariables';\r\n\r\nfunction getFormData(e) {\r\n  const data = {};\r\n  const formData = new FormData(e);\r\n  for (let entry of formData.entries()) {\r\n    data[entry[0]] = entry[1]\r\n  }\r\n  return data;\r\n}\r\n\r\nfunction sliceData(data, current, limit) {\r\n  var start = (current - 1) * limit;\r\n  var end = current * limit;\r\n  var fixdata = data.slice(start, end);\r\n  return fixdata;\r\n}\r\n\r\nfunction calculatePagesCount(limit, totalCount) {\r\n  return totalCount < limit ? 1 : Math.ceil(totalCount / limit);\r\n}\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data_images_original: [],\r\n      data_images: [],\r\n      data_images_total: 0,\r\n      data_title: \"\",\r\n      current_page: 1,\r\n      limit_per_page: 9,\r\n    };\r\n  }\r\n\r\n  // fetch data images\r\n  postImageSearchData(req) {\r\n    axios.post(Path.API + 'flickr/feeds/publicPhotos', req)\r\n      .then((response) => {\r\n        var resp = response.data;\r\n        if (resp) {\r\n          this.setState({\r\n            data_images_original: resp.items,\r\n            data_images: sliceData(resp.items, 1, this.state.limit_per_page),\r\n            data_images_total: resp.items.length,\r\n            data_title: resp.title\r\n          });\r\n        }\r\n        // console.log('tes', response.data);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.postImageSearchData({ format: \"json\" });\r\n  }\r\n\r\n  onClickImage = (link) => {\r\n    window.open(link);\r\n  }\r\n\r\n  onChangePagination = (event, page) => {\r\n    const section = document.querySelector('#app-content');\r\n    section.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n\r\n    this.setState({\r\n      data_images: [],\r\n      current_page: page\r\n    }, () => {\r\n      this.setState({\r\n        data_images: sliceData(this.state.data_images_original, page, this.state.limit_per_page),\r\n      })\r\n    });\r\n  }\r\n\r\n  onSubmitSearch = (e) => {\r\n    e.preventDefault();\r\n    var data = getFormData(e.target);\r\n    var escape_txtsearch = data.search_value.replace(/[^a-zA-Z0-9 ]/g, \"\"); // clear special chars\r\n    var tags_txtsearch = escape_txtsearch.replace(/[ ,]+/g, \",\"); // format space into coma\r\n\r\n    var request_body = {\r\n      format: \"json\",\r\n      tags: tags_txtsearch\r\n    };\r\n    // do the execution\r\n    this.postImageSearchData(request_body);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <div className=\"app-header\">\r\n          <h2 className=\"text-center\" style={{ margin: \"1rem 0\" }}>Test AIA Project</h2>\r\n          <form onSubmit={this.onSubmitSearch}>\r\n            <div className=\"h-flex jc ac search-bar\">\r\n              <TextField id=\"search_value\" name=\"search_value\"\r\n                label=\"Search Something\"\r\n                variant=\"outlined\" className=\"search-input\"\r\n                InputProps={{\r\n                  endAdornment: <InputAdornment position=\"end\">\r\n                    <IconButton aria-label=\"ImageSearch\" title=\"click to search\" type=\"submit\">\r\n                      <ImageSearchIcon />\r\n                    </IconButton>\r\n                  </InputAdornment>,\r\n                }}\r\n              />\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"app-content\" id=\"app-content\">\r\n          <Container maxWidth=\"lg\">\r\n            <h2 className=\"text-center\" style={{ margin: \"1rem 0\" }}>{this.state.data_title}</h2>\r\n\r\n            {this.state.data_images ?\r\n              <Grid container spacing={2}>\r\n                {this.state.data_images.map((row, index) => {\r\n                  var _title = row.title === \" \" ? row.title.replace(\" \", \"-\")\r\n                    : row.title === \"\" ? \"-\"\r\n                      : row.title.substring(0, 49);\r\n                  var _author = row.author.match(/\"(.*?)\"/)[1];\r\n\r\n                  return (\r\n                    <Grow in={true} timeout={index * 1000} key={index}>\r\n                      <Grid item xs={12} sm={6} md={4}>\r\n                        <Card onClick={this.onClickImage.bind(this, row.link)}>\r\n                          <CardActionArea>\r\n                            <CardMedia\r\n                              className=\"image-item\"\r\n                              image={row.media.m}\r\n                              title={row.title}\r\n                            />\r\n                            <CardContent>\r\n                              <h4>{_title}</h4>\r\n                              <p>By:&nbsp;{_author}</p>\r\n                              <p className=\"text-right\" style={{ fontSize: '11px', color: '#959da5' }}>\r\n                                Uploaded&nbsp;on&nbsp;{moment(row.date_taken).format('DD MMM YYYY HH:MM')}\r\n                              </p>\r\n                            </CardContent>\r\n                          </CardActionArea>\r\n                        </Card>\r\n                      </Grid>\r\n                    </Grow>\r\n                  );\r\n                })}\r\n              </Grid>\r\n              : <div className=\"content-not-found\">\r\n                <ErrorOutlineIcon style={{ fontSize: '300px' }} color=\"error\" />\r\n                <h2>Sorry, Data Not Found</h2>\r\n              </div>\r\n            }\r\n\r\n            {this.state.data_images_total > this.state.limit_per_page ?\r\n              <Pagination\r\n                className=\"image-pagination\"\r\n                color=\"primary\"\r\n                count={calculatePagesCount(this.state.limit_per_page, this.state.data_images_total)}\r\n                page={this.state.current_page}\r\n                onChange={this.onChangePagination}\r\n              />\r\n              : null\r\n            }\r\n          </Container>\r\n        </div>\r\n        <div className=\"app-footer\">\r\n          <a href=\"https://github.com/wynekayuliana\" target=\"blank\" style={{ color: '#fff' }}>wynekayuliana</a> &copy; 2020\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}